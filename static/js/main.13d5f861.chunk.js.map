{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","timer","Date","toLocaleTimeString","timerId","setInterval","date","console","log","setState","prevProps","this","props","name","clearInterval","React","Component","App","isClockVisible","clockName","names","className","type","onClick","randomized","Math","floor","random","length","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,OAAO,IAAIC,MAAOC,sBAFtB,EAKEC,QAAwBC,aAAY,WAClC,IAAMC,EAAa,IAAIJ,KAGvBK,QAAQC,IAAIF,EAAKH,wBAChB,KAVL,uDAYE,WAAqB,IAAD,OAClBE,aAAY,WACV,EAAKI,SAAS,CAAER,OAAO,IAAIC,MAAOC,yBACjC,OAfP,gCAkBE,SAAmBO,GACbC,KAAKC,MAAMC,OAASH,EAAUG,MAEhCN,QAAQC,IAAI,mDArBlB,kCAyBE,WACEM,cAAcH,KAAKP,WA1BvB,oBA6BE,WACE,IAAQH,EAAUU,KAAKX,MAAfC,MAER,OACE,mCACGA,QAlCT,GAA2Bc,IAAMC,WCE3BC,E,4MACJjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,e,4CAGb,WAAU,IAAD,OAEDC,EAAQ,CAAC,QAAS,gBAAiB,cAAe,QAAS,cAEjE,OACE,sBAAKC,UAAU,MAAf,UACE,6BAAKV,KAAKX,MAAMmB,YAEfR,KAAKX,MAAMkB,gBACV,oBAAG,UAAQ,OAAX,0BAEG,IACD,cAAC,EAAD,CAAOL,KAAMF,KAAKX,MAAMmB,eAI5B,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAES,gBAAgB,KAHpC,wBASA,wBACEI,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAES,gBAAgB,KAHpC,wBASA,wBACEI,KAAK,SACLC,QAAS,WACP,IAAMC,EAAaJ,EAAMK,KAAKC,MAAMD,KAAKE,SAAWP,EAAMQ,SAE1D,EAAKnB,SAAS,CAAEU,UAAWK,KAL/B,oC,GAxCUT,IAAMC,WAuDTC,IChEfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.13d5f861.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  timer: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    timer: new Date().toLocaleTimeString(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {\n    const date: Date = new Date();\n\n    // eslint-disable-next-line\n    console.log(date.toLocaleTimeString());\n  }, 1000);\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({ timer: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line\n      console.log('The Clock was renamed from oldName to newName');\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { timer } = this.state;\n\n    return (\n      <>\n        {timer}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\ntype Props = {};\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: string,\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 'React clock',\n  };\n\n  render() {\n    // eslint-disable-next-line max-len\n    const names = ['Clock', 'Another Clock', 'React Clock', 'React', 'Clock Name'];\n\n    return (\n      <div className=\"App\">\n        <h1>{this.state.clockName}</h1>\n\n        {this.state.isClockVisible && (\n          <p data-cy=\"time\">\n            Current time:\n            {' '}\n            <Clock name={this.state.clockName} />\n          </p>\n        )}\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            const randomized = names[Math.floor(Math.random() * names.length)];\n\n            this.setState({ clockName: randomized });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}